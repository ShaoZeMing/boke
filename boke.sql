-- phpMyAdmin SQL Dump
-- version 4.4.11
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2016-08-23 17:15:34
-- 服务器版本： 5.6.24
-- PHP Version: 5.6.16

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `boke`
--

-- --------------------------------------------------------

--
-- 表的结构 `bk_blog`
--

CREATE TABLE IF NOT EXISTS `bk_blog` (
  `blog_id` int(10) unsigned NOT NULL,
  `blog_title` varchar(60) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `blog_content` text CHARACTER SET utf8 NOT NULL,
  `blog_logo` varchar(100) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '博客浓缩图',
  `blog_cid` smallint(3) unsigned NOT NULL,
  `blog_uid` int(10) unsigned NOT NULL,
  `blog_type` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '0：可见，1：隐藏',
  `blog_time` int(10) unsigned NOT NULL DEFAULT '0',
  `blog_click` int(10) unsigned NOT NULL DEFAULT '0'
) ENGINE=MyISAM AUTO_INCREMENT=54 DEFAULT CHARSET=utf8mb4 COMMENT='博客文章表';

--
-- 转存表中的数据 `bk_blog`
--

INSERT INTO `bk_blog` (`blog_id`, `blog_title`, `blog_content`, `blog_logo`, `blog_cid`, `blog_uid`, `blog_type`, `blog_time`, `blog_click`) VALUES
(36, 'MYSQL部署配置方法', '&lt;ol class=&quot;exp-conent-orderlist list-paddingleft-2&quot; style=&quot;list-style-type: none;&quot;&gt;&lt;li&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px;&quot;&gt;MySQL安装文件分为两种，一种是msi格式的，一种是zip格式的。如果是msi格式的可以直接点击安装，按照它给出的安装提示进行安装（相信大家的英文可以看懂英文提示），一般MySQL将会安装在C:\\Program Files\\MySQL\\MySQL Server 5.6 该目录中；zip格式是自己解压，解压缩之后其实MySQL就可以使用了，但是要进行配置。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;MySQL安装文件分为两种，一种是msi格式的，一种是zip格式的。如果是msi格式的可以直接点击安装，按照它给出的安装提示进行安装（相信大家的英文可以看懂英文提示），一般MySQL将会安装在C:\\Program Files\\MySQL\\MySQL Server 5.6 该目录中；zip格式是自己解压，解压缩之后其实MySQL就可以使用了，但是要进行配置。&lt;/p&gt;&lt;p&gt;解压之后可以将该文件夹改名，放到合适的位置，个人建议把文件夹改名为MySQL Server 5.6，放到C:\\Program Files\\MySQL路径中。当然你也可以放到自己想放的任意位置。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160823/1471921115572753.jpg&quot; title=&quot;1471921115572753.jpg&quot; alt=&quot;MYSQL.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639127121723.jpg&quot; title=&quot;1465639127121723.jpg&quot; alt=&quot;1.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;完成上述步骤之后，很多用户开始使用MySQL，但会出现图示的错误。这是因为没有配置环境变量所致。配置环境变量很简单：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我的电脑-&amp;gt;属性-&amp;gt;高级-&amp;gt;环境变量&lt;/p&gt;&lt;p&gt;选择PATH,在其后面添加: 你的mysql bin文件夹的路径 (如:C:\\Program Files\\MySQL\\MySQL Server 5.6\\bin )&lt;/p&gt;&lt;p&gt;PATH=.......;C:\\Program Files\\MySQL\\MySQL Server 5.6\\bin (注意是追加,不是覆盖)&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639163113573.jpg&quot; title=&quot;1465639163113573.jpg&quot; alt=&quot;2.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639173865670.jpg&quot; title=&quot;1465639173865670.jpg&quot; alt=&quot;3.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;配置完环境变量之后先别忙着启动mysql，我们还需要修改一下配置文件（如果没有配置，之后启动的时候就会出现图中的错误哦！:错误2 系统找不到文件），mysql-5.6.1X默认的配置文件是在C:\\Program Files\\MySQL\\MySQL Server 5.6\\my-default.ini，或者自己建立一个my.ini文件，&lt;/p&gt;&lt;p&gt;在其中修改或添加配置（如图）：&amp;nbsp;&lt;/p&gt;&lt;p&gt;[mysqld]&amp;nbsp;&lt;/p&gt;&lt;p&gt;basedir=C:\\Program Files\\MySQL\\MySQL Server 5.6（mysql所在目录）&amp;nbsp;&lt;/p&gt;&lt;p&gt;datadir=C:\\Program Files\\MySQL\\MySQL Server 5.6\\data （mysql所在目录\\data）&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639327999284.jpg&quot; title=&quot;1465639327999284.jpg&quot; alt=&quot;4.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639224457126.jpg&quot; title=&quot;1465639224457126.jpg&quot; alt=&quot;5.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639305124275.jpg&quot; title=&quot;1465639305124275.jpg&quot; alt=&quot;6.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以管理员身份运行cmd（一定要用管理员身份运行，不然权限不够），&lt;/p&gt;&lt;p&gt;输入：cd C:\\Program Files\\MySQL\\MySQL Server 5.6\\bin&amp;nbsp;进入mysql的bin文件夹(不管有没有配置过环境变量，也要进入bin文件夹，否则之后启动服务仍然会报错误2)&lt;/p&gt;&lt;p&gt;输入mysqld -install(如果不用管理员身份运行，将会因为权限不够而出现错误：Install/Remove of the Service Denied!)&amp;nbsp;&lt;/p&gt;&lt;p&gt;安装成功&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639375116491.jpg&quot; title=&quot;1465639375116491.jpg&quot; alt=&quot;360截图20160611175727484.jpg&quot;/&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639360773711.jpg&quot; title=&quot;1465639360773711.jpg&quot; alt=&quot;8.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;安装成功后就要启动服务了，继续在cmd中输入:net start mysql（如图）,服务启动成功！&lt;/p&gt;&lt;p&gt;此时很多人会出现错误，请看注意：&lt;/p&gt;&lt;p&gt;注意：这个时候经常会出现错误2和错误1067。&lt;/p&gt;&lt;p&gt;如果出现“错误2 系统找不到文件”，检查一下是否修改过配置文件或者是否进入在bin目录下操作，如果配置文件修改正确并且进入了bin文件夹，需要先删除mysql（输入 mysqld -remove）再重新安装（输入 mysqld -install）；&lt;/p&gt;&lt;p&gt;如果出现错误1067，那就是配置文件修改错误，确认一下配置文件是否正确。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160611/1465639561108900.jpg&quot; title=&quot;1465639561108900.jpg&quot; alt=&quot;9.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;服务启动成功之后，就可以登录了，如图，输入mysql -u root -p（第一次登录没有密码，直接按回车过）,登录成功！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160823/1471921115572753.jpg', 8, 1, 0, 1465639593, 16),
(37, '', '&lt;p&gt;&amp;nbsp;所有的努力都不会完全白费，你付出多少时间和精力，都是在对未来的积累。世界上什么都不公平，唯独时间最公平，你是懒惰还是努力，时间都会给出结果。&lt;br/&gt;‌&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/demo.jpg', 12, 1, 0, 1465991964, 0),
(38, '', '&lt;p&gt;‌&amp;nbsp;根本没有正确的抉择，我们只不过是努力奋斗使当初的选择变得正确。&lt;br/&gt;‌&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/demo.jpg', 12, 1, 0, 1465991984, 2),
(53, '', '&lt;p&gt;别让懦弱否定自己，别让懒惰误了青春。&lt;img src=&quot;/APP/Public/upload/images/20160823/1471940104114202.png&quot; title=&quot;1471940104114202.png&quot; alt=&quot;e5e39b1148811261c78b933805d07232.png&quot;/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160823/1471940104114202.png', 12, 1, 0, 1471940106, 0),
(21, '讨论最多的编程语言：JavaScript居首位', '&lt;p&gt;摘要：作者使用StackOverflow数据库来查询所有2014年的帖子，在对标签进行处理后，基于他们在帖子中出现的次数进行统计，然后总共分析和处理了2591986事件中，9307个独立标签，得出JavaScript是出现次数最多的编程语言。...&lt;/p&gt;&lt;p&gt;转载请注明来源：2014年讨论最多的编程语言：JavaScript居首位&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2014年即将挥手告别，许多软件工程师都会做个年底总结或者盘点啥的，而本文作者却十分关心2014年，哪些语言是最受开发者欢迎，人们经常挂在嘴边的。大家一起来看下。&lt;/p&gt;&lt;p&gt;2014年即将结束，我想知道2014年最流行的编程语言是什么，于是，我决定一探究竟。&lt;/p&gt;&lt;p&gt;我使用StackOverflow数据库来查询所有2014年的帖子，在对标签进行处理后，基于他们在帖子中出现的次数进行统计，然后总共分析和处理了2591986事件中，9307个独立标签，得出如下结果：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;该饼状图并不能100%准确反映出每个标签的情况。大家可以根据下面的原始数据对每门语言有个大概的了解。从中可以看出，在StackOverflow上，开发者讨论最多的编程语言当属JavaScript、PHP和Java。&lt;/p&gt;&lt;p&gt;原始数据：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;转载请注明来源：2014年讨论最多的编程语言：JavaScript居首位&lt;br/&gt;http://www.php1.cn/Content/2014_NianTaoLunZuiDuoDeBianChengYuYan_-JavaScript_JuShouWei.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/demo.jpg', 3, 1, 0, 1464499558, 11),
(22, 'JavaScript、jQuery、HTML5、Node.js实例大全-读书笔记4', '&lt;p&gt;摘要：只要图片高度不一致，通过这样的思路很快就可以看到一个“瀑布流”，这仅仅是静态的，一般滚动的时候瀑布流都会添加数据，所以接下来就是添加滚动事件，只要有滚动就计算然后补充数据。 ...&lt;/p&gt;&lt;p&gt;转载请注明来源：JavaScript、jQuery、HTML5、Node.js实例大全-读书笔记4&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; padding: 0px; font-size: 14px; font-weight: 400; word-wrap: break-word; word-break: break-all;&quot;&gt;5.2.2 让瀑布流动起来&lt;/p&gt;&lt;p&gt;打好基建之后，就需要写JavaScript代码。首先如果数据不够显示一屏幕的情况，就用新数据来补足它，在补充的时候是根据4列中最矮的那一个为优先补充，因为高矮尺寸一般只有在客户端才看得到，服务端虽然也可以计算，但是会很浪费资源，客户端的内存和CPU能用则多用，只要不让客户端变慢就行。&lt;/p&gt;&lt;p&gt;只要图片高度不一致，通过这样的思路很快就可以看到一个“瀑布流”，这仅仅是静态的，一般滚动的时候瀑布流都会添加数据，所以接下来就是添加滚动事件，只要有滚动就计算然后补充数据。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;先看图5-5的效果。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在网上收集了一些固定宽度不固定高度的图片，简单设置了一下页面的样式，在实际项目中外观样式设置可能更加复杂一些，本书重点研讨JavaScript，所以还是先看看其实现代码【范例5-2】。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;35. eg.getDataList = function(min,max){//模端提供拟构造数据，实际上这些数据由后&lt;br/&gt;36. var lst = [],n=8;//保存数据&lt;br/&gt;37. for(var i=0;i&amp;lt;n;i++){//每次模拟 n 条&lt;br/&gt;38. var k = min + parseInt(Math.random()*(max-min));//随机指定范围的数&lt;br/&gt;39. lst.push(k+&amp;quot;.jpg&amp;quot;);//拼接成字符串&lt;br/&gt;40. } &lt;br/&gt;41. return lst;//返回数组&lt;br/&gt;42. }; &amp;nbsp;&lt;br/&gt;43. eg.cols = eg.getElementsByClassName(&amp;quot;col&amp;quot;);//把目标对象缓存起来&lt;br/&gt;44. eg.colh = [0,0,0,0];//存取每列的高度&lt;br/&gt;45. eg.getColMin = function(){//计算 4 列高度&lt;br/&gt;46. var min = 0,m = {};&lt;br/&gt;47. for(var i=0;i&amp;lt;4;i++){&lt;br/&gt;48. min = parseInt(eg.cols[i].offsetHeight);&lt;br/&gt;49. eg.colh[i] = min;&lt;br/&gt;50. m[min] = i;&lt;br/&gt;51. } &lt;br/&gt;52. return eg.cols[m[Math.min.apply(Array,eg.colh)]||0];//返回最小高度的对象&lt;br/&gt;53. } &lt;br/&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//追加数据的方法&lt;br/&gt;54. eg.add = function(dl){&lt;br/&gt;55. for(var i in dl){&lt;br/&gt;56. var newDiv = document.createElement(&amp;quot;div&amp;quot;)&lt;br/&gt;57. var newImg = document.createElement(&amp;quot;img&amp;quot;);&lt;br/&gt;58. newImg.src = dl[i];&lt;br/&gt;59. newDiv.appendChild(newImg);&lt;br/&gt;60. newDiv.innerHTML += &amp;#39;&amp;lt;p&amp;gt;[&amp;#39;+dl[i]+&amp;#39;]&amp;lt;/p&amp;gt;&amp;#39;;&lt;br/&gt;61. eg.getColMin().appendChild(newDiv);//追加到最小高度列里&lt;br/&gt;62. } &lt;br/&gt;63. }; &amp;nbsp;&lt;br/&gt;64. eg.scroll = function(){//滚动条事件处理&lt;br/&gt;65. window.onscroll = function(){//onscroll,onload,onresize 只能这样添加&lt;br/&gt;66. var doc = document;&lt;br/&gt;67. var top = doc.documentElement.scrollTop || doc.body.scrollTop;//滚动条到顶部的高度&lt;br/&gt;68. var winH = doc.documentElement.clientHeight||doc.body.clientHeight;//可视窗口的高度&lt;br/&gt;69. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if(Math.min.apply(Array,eg.colh) &amp;lt; top+winH){ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//如果最小高度小于可视区域，就补充&lt;br/&gt;70. eg.add(eg.getDataList(1,35));//随机获取数据，并追加到最 后&lt;br/&gt;71. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br/&gt;72. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br/&gt;73. &amp;nbsp; }&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面代码中的 eg.getElementsByClassName()方法是之前定义过的一个方法，存放在 base.js 文件 中，通过【范例 5-1】可知，默认数据很少，需要在初始化的时候补充一些，这就要在 HTML 页面&lt;br/&gt;增加一个 script 标签，先调用 eg.getColMin()获取已经存在的数据高度并保存到 eg.colh 数组中以便&lt;br/&gt;后面判断使用，然后调用 eg.getDataList()方法模拟一批数据，正规项目中会用 AJAX 去服务端请求， 然后把数据用 eg.add()方法追加到后面。最后还要调用一下 eg.scroll()方法绑定滚动条事件的监听， 加入代码是这样的：&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;lt;script&amp;gt;&lt;br/&gt;eg.getColMin();	//计算第一批数据的高度&lt;br/&gt;var dl = eg.getDataList(5,35); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//初始化一些数据&amp;nbsp;&lt;br/&gt;eg.add(dl); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //补充剩下的数据&amp;nbsp;&lt;br/&gt;eg.scroll(); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //启动滚动条监听&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;br/&gt;注意：由于真实项目中，window.onscroll 事件可能会绑定多个业务，所以本例中的直接覆盖绑 定方式不宜直接拉入项目中去，要确保没有其他业务占用的情况下方可如此，否则可能会出现一些 意外情况，比如无法执行、某些事件被覆盖等等。&lt;br/&gt;图片和文件放置在同一个目录，否则请修改相应的路径。当能够用鼠标怎么也滚不到底的时候，&lt;br/&gt;恭喜你已实现经典的固定列宽瀑布流！&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;最具士兵突击实战类型的JavaScript&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;转载请注明来源：JavaScript、jQuery、HTML5、Node.js实例大全-读书笔记4&lt;br/&gt;jdjd&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/demo.jpg', 3, 1, 0, 1464499918, 42),
(20, '移动端H5 css3模拟边框最新研究(超实用)', '&lt;p id=&quot;前言&quot; style=&quot;color: rgb(51, 51, 51);font-family: 宋体;line-height: 28px;white-space: normal;background-color: rgb(249, 249, 249)&quot;&gt;前言&lt;/p&gt;&lt;p&gt;在之前写的一篇博文《移动端H5的一些基本知识点总结 第五节 边框的处理》中,我提到,可以使用box-shadow:0 0 0 1px #ddd;&amp;nbsp;这样的方式,来模拟边框.当然,博文中的内容并没有错,但是却有一定的局限性.因此,今天在这里,纠正和完善我之前的博文中的缺陷.&lt;/p&gt;&lt;p&gt;为什么要模拟边框,而不是直接写边框?&lt;br/&gt;因为边框要计算盒子模型.而我们在移动端可能使用的是自适应布局的方式.这样计算边框很费劲.&lt;br/&gt;因此,使用模拟边框的方法,就可以不用考虑边框的宽度的问题了,这样更加方便.&lt;br/&gt;当然,使用&amp;nbsp;box-sizing:border-box&amp;nbsp;这样的属性也可以将边框不计算在盒子模型里.&lt;br/&gt;而且这种方法在很多现代CSS框架上都使用着.&lt;br/&gt;但是我个人不推荐这种做法.因为,这样padding也不计算在盒子模型里面了.&lt;br/&gt;反正我不喜欢这样的做法.所以我就模拟边框啦!&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160823/1471921256112816.jpg&quot; title=&quot;1471921256112816.jpg&quot; alt=&quot;ccs7200b18226d91deb5de59ee90d4.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;前文回顾&lt;img src=&quot;/APP/Public/upload/images/20160822/1471860799673662.jpg&quot; title=&quot;1471860799673662.jpg&quot; alt=&quot;aaaaa8568c76454aab2489e0d56e.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;如果你不愿意去打开上面的链接,看下上一篇博文中说了什么.这里我就把两种关键的模拟方法给总结出来.如果不理解,可以去看,如果理解,就直接看下面的内容.&lt;/p&gt;&lt;p&gt;方法一&amp;nbsp;outline&amp;nbsp;模拟边框&lt;/p&gt;&lt;p&gt;使用&amp;nbsp;outline: 1px solid #ddd;&amp;nbsp;这样的描边线的方式模拟边框&lt;/p&gt;&lt;p&gt;优点:&lt;br/&gt;1. 可以和&amp;nbsp;border&amp;nbsp;一样使用各种线形&lt;br/&gt;2. 可以调整边框到盒子的距离&amp;nbsp;outline-offset&amp;nbsp;参数&lt;/p&gt;&lt;p&gt;缺点:&lt;br/&gt;1. 不能做成贴合圆角元素(这被W3C认为是一个BUG,可能在不远的将来修复)&lt;br/&gt;2. 只能一下子加到四边,不能只加一边.&lt;/p&gt;&lt;p&gt;方法二&amp;nbsp;box-shadow&amp;nbsp;模拟边框&lt;/p&gt;&lt;p&gt;使用&amp;nbsp;box-shadow:0 0 0 1px #ddd;&amp;nbsp;外发光模拟边框&lt;/p&gt;&lt;p&gt;优点:&lt;br/&gt;1. 可以贴合圆角元素,生成完美的边框&lt;br/&gt;2. 可以重复参数,生成多条边框&lt;/p&gt;&lt;p&gt;缺点:&lt;br/&gt;1. 只有实线线性,不能做虚线&lt;/p&gt;&lt;p&gt;更多请看我前面的博文,或者百度相关信息.&lt;/p&gt;&lt;p&gt;box-shadow&amp;nbsp;可以模拟任意边的边框&lt;/p&gt;&lt;p&gt;我原来以为是做不到的.可见我的CSS功底还是不够强,还要努力学习呀.&lt;/p&gt;&lt;p&gt;上次我闲来无事,用一个DIV写了一套字母数字表&amp;nbsp;查看DEMO.虽然用到了相关的知识点,但是还是没有往模拟边框的这条思路上靠.&lt;/p&gt;&lt;p&gt;今天仔细一想,原来&amp;nbsp;box-shadow&amp;nbsp;是可以模拟四条边中的任意一条边的.因此,才写下这篇博文.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160823/1471921256112816.jpg', 5, 1, 0, 1464498761, 6),
(12, 'MySQL表类型MyISAM和InnoDB的区别', '&lt;p&gt;摘要：MySQL表类型MyISAM和InnoDB的区别MySQL的表类型MyISAM和InnoDB之间的最大区别是，InnoDB的支持事务...&lt;/p&gt;&lt;p&gt;转载请注明来源：MySQL表类型MyISAM和InnoDB的区别&lt;br/&gt;&lt;/p&gt;&lt;p&gt;查找相关文章:myisam,innodb,mysql&lt;/p&gt;&lt;p&gt;The big &amp;nbsp;is that InnoDB supports transaction&lt;/p&gt;&lt;p&gt;InnoDB supports some newer features: Transactions, row-level locking, foreign keys&lt;/p&gt;&lt;p&gt;InnoDB is for high volume, high performance&lt;/p&gt;&lt;p&gt;Most people use MyISAM if they need speed and InnoDB for data integrity. You can use more than one or any combination of these table types in your database. Remember to asses the needs of your application before building it. Even though MyISAM is faster than InnoDB in the MySQL world, InnoDB is fast compared to any database engine.With InnoDB you get transactions, speed and integrity three features not usually used in the same sentence.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;InnoDB has been designed for maximum performance when processing large data volumes. Its CPU efficiency is probably not matched by any other disk-based relational database engine.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Fully integrated with MySQL Server, the InnoDB storage engine maintains its own buffer pool for caching data and indexes in main memory. InnoDB stores its tables and indexes in a tablespace, which may consist of several files (or raw disk partitions). This is different from, for example, MyISAM tables where each table is stored using separate files. InnoDB tables can be of any size even on operating systems where file size is limited to 2GB.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464495598115049.jpg&quot; title=&quot;1464495598115049.jpg&quot; alt=&quot;MYSQL.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;谷歌翻译了一下&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;MySQL的表类型MyISAM和InnoDB之间的最大区别是，InnoDB的支持事务&lt;/p&gt;&lt;p&gt;InnoDB支持一些新的功能：交易，行级锁，外键&lt;/p&gt;&lt;p&gt;InnoDB是高容量，高性能的&lt;/p&gt;&lt;p&gt;大多数人使用MyISAM表，如果他们需要速度和InnoDB数据的完整性。您可以使用超过一个或任意组合这些在你的数据库中的表类型。请记住，驴在建设之前，您的应用程序的需求。即使MyISAM是速度比在MySQL的InnoDB的世界，InnoDB是比较快的任何的数据库engine.With InnoDB的交易，速度和完整性三个功能通常不会在同一个句子中使用。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;InnoDB的已被设计为处理大数据量时的最大性能。任何其他基于磁盘的关系数据库引擎，它的CPU效率可能不匹配。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;完全整合，InnoDB存储引擎与MySQL服务器在主内存中缓存数据和索引维护自己的缓冲池。 InnoDB的表和索引存储在表空间中，这可能包括几个文件（或原始磁盘分区）。这是不同的，例如，MyISAM表，其中每个表存储使用单独的文件中。 InnoDB表可以是任何尺寸，即使文件大小限制为2GB的操作系统上。&lt;/p&gt;&lt;p&gt;转载请注明来源：MySQL表类型MyISAM和InnoDB的区别&lt;br/&gt;http://www.php1.cn/Content/MySQL_BiaoLeiXing_MyISAM_He_InnoDB_DeQuBie.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464495598115049.jpg', 11, 1, 0, 1464495604, 0),
(13, '解决mysql5中文乱码问题的方法', '&lt;p&gt;摘要：MySQL5的乱码问题可以用下面的方法解决：...&lt;/p&gt;&lt;p&gt;转载请注明来源：解决mysql5中文乱码问题的方法&lt;br/&gt;MySQL5的乱码问题可以用下面的方法解决：&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;1.设置phpMyAdmin&amp;nbsp;&lt;br/&gt;&lt;br/&gt;Language:Chinese simplified (zh-utf-8)&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;MySQL 字符集：UTF-8 Unicode (utf8)&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;MySQL 连接校对 gbk_chinese_ci&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;2.创建数据库时&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;整理设置成 gbk_chinese_ci&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464496052543749.gif&quot; title=&quot;1464496052543749.gif&quot; alt=&quot;1111165586a35.gif&quot;/&gt;&lt;br/&gt;&lt;br/&gt;3.用SQL建立表中&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;ENGINE=MyISAM DEFAULT CHARSET=gbk;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;ENGINE=InnoDB DEFAULT CHARSET=gbk AUTO_INCREMENT=40 ;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;4.检查表结构中&lt;br/&gt;varchar(100) 的整理属性为gbk_chinese_ci&lt;br/&gt;其它类型的整理属性为空。&lt;br/&gt;5.代码中加上&lt;br/&gt;$db-&amp;gt;query(&amp;quot;SET CHARACTER SET GBK&amp;quot;); Linux下需要，Windows下则不需要。&lt;br/&gt;此种操作相当于Connection Character Sets and Collations&lt;br/&gt;转载请注明来源：解决mysql5中文乱码问题的方法&lt;br/&gt;http://www.php1.cn/Content/JieJue_mysql5_ZhongWenLuanMaWenTiDeFangFa.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464496052543749.gif', 11, 1, 0, 1464496072, 1),
(14, 'phpmyadmin导入导出数据库文件最大限制的解决方法', '&lt;p&gt;摘要：一般网站经常用phpmyadmin备份和恢复数据库，但默认总是限制了16M。网站数据一多就不行了。 ...&lt;/p&gt;&lt;p&gt;转载请注明来源：phpmyadmin导入导出数据库文件最大限制的解决方法&lt;br/&gt;一般网站经常用phpmyadmin备份和恢复数据库，但默认总是限制了16M。网站数据一多就不行了。&lt;br/&gt;解决方法如下：&lt;br/&gt;（1）修改php.ini适用自己有服务器的人&lt;br/&gt;大多数都修改php.ini中的upload_max_filesize，但修改了这个以后，还是提示这个问题；&lt;br/&gt;那么更改如下几处：&lt;br/&gt;修改 PHP.ini&lt;br/&gt;file_uploads &amp;nbsp; &amp;nbsp; on &amp;nbsp; 是否允许通过HTTP上传文件的开关。默认为ON即是开&amp;nbsp;&lt;br/&gt;upload_tmp_dir &amp;nbsp; 　文件上传至服务器上存储临时文件的地方，如果没指定就会用系统默认的临时文件夹&amp;nbsp;&lt;br/&gt;upload_max_filesize &amp;nbsp; 20m &amp;nbsp; 　 望文生意，即允许上传文件大小的最大值。默认为2M&amp;nbsp;&lt;br/&gt;post_max_size &amp;nbsp; 30m &amp;nbsp; 　　　 指通过表单POST给PHP的所能接收的最大值，包括表单里的所有值。默认为8M&lt;br/&gt;说明&amp;nbsp;&lt;br/&gt;一般地，设置好上述四个参数后，在网络正常的情况下，上传&amp;amp;lt;=8M的文件是不成问题&amp;nbsp;&lt;br/&gt;但如果要上传&amp;amp;gt;8M的大体积文件，只设置上述四项还一定能行的通。除非你的网络真有100M/S的上传高速，否则你还得继续设置下面的参数。&lt;br/&gt;max_execution_time &amp;nbsp; 300 &amp;nbsp; &amp;nbsp; 每个PHP页面运行的最大时间值(秒)，默认30秒&lt;br/&gt;max_input_time &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 300 &amp;nbsp; &amp;nbsp; 每个PHP页面接收数据所需的最大时间，默认60秒&lt;br/&gt;memory_limit &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 128m &amp;nbsp; &amp;nbsp; 每个PHP页面所吃掉的最大内存，默认8M&lt;br/&gt;设定 POST 数据所允许的最大大小。此设定也影响到文件上传。要上传大文件，该值必须大于 upload_max_filesize。&lt;br/&gt;如果配置脚本中激活了内存限制，memory_limit 也会影响文件上传。通常说，memory_limit 应该比 post_max_size 要大。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464496579841959.png&quot; title=&quot;1464496579841959.png&quot; alt=&quot;787878.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;（2）这个方法很简单，不需要修改php.ini参数， 适用把站放在虚拟主机的人。&lt;br/&gt;打开phpMyAdmin目录下的配置文件：config.inc.php&lt;br/&gt;请注意其中的这两个参数：&lt;br/&gt;$cfg[&amp;#39;UploadDir&amp;#39;] = ‘A‘;&lt;br/&gt;$cfg[&amp;#39;SaveDir&amp;#39;] = ‘B‘;&lt;br/&gt;在phpMyAdmin目录下自行建立文件夹A和B来对应UploadDir（导入目录）和SaveDir（导出目录）。&lt;br/&gt;导出操作：&lt;br/&gt;1、登陆phpMyAdmin&lt;br/&gt;2、在左侧选中你需要备份导出的数据库&lt;br/&gt;3、在右侧窗口中找到“导出”&lt;br/&gt;4、在右侧窗口底部选择“保存于服务器的 B/ 目录”&lt;br/&gt;5、选择压缩模式，提交“执行”即可在B文件夹中找到该数据库的导出数据。&lt;br/&gt;导入操作：&lt;br/&gt;1、上传准备导入的数据文件到A目录&lt;br/&gt;2、登陆phpMyAdmin&lt;br/&gt;3、在左侧选中你需要备份导出的数据库&lt;br/&gt;4、在右侧窗口中找到“Import”（导出）&lt;br/&gt;5、在右侧窗口“网站服务器上载目录”中选择需要导入的数据文件，提交“执行”完成导入。&lt;br/&gt;转载请注明来源：phpmyadmin导入导出数据库文件最大限制的解决方法&lt;br/&gt;http://www.php1.cn/Content/phpmyadmin_DaoRuDaoChuShuJuKuWenJianZuiDaXianZhiDeJieJueFangFa.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464496579841959.png', 11, 1, 0, 1464496586, 1),
(15, 'javascript跨域请求数据常见的几个变通的方法', '&lt;p&gt;摘要：跨域问题是由浏览器安全性限制而引起的，可以采取变通的方法解决。方法一，采用动态创建方法二，直接把表单提交，提交的页面处理完毕后他直接太跳转下...&lt;/p&gt;&lt;p&gt;转载请注明来源：javascript跨域请求数据常见的几个变通的方法&lt;br/&gt;跨域问题是由浏览器安全性限制而引起的，可以采取变通的方法解决。&lt;br/&gt;方法一，采用动态创建&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/app/public/upload/images/20160529/1464497022498221.jpg&quot; title=&quot;1464497022498221.jpg&quot; alt=&quot;01010101.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;而这个aspx可以返回段JS数据,来回调调用页面中的一个JS方法&amp;nbsp; 比如说&amp;nbsp; showmessage(&amp;quot;返回成功&amp;quot;); 这样可以达到隐性提交的目的。（在跨域下可以实现JAX同样的效果）。但这种方法由于URL长度的限制，不能提交太大的数据，和不能进行POST请求，而且你还要又B域的输出控制权。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;方法二，直接把表单提交，提交的页面处理完毕后他直接太跳转下，同时把相关信息在提交给相同的域名下的一个文件，由本域名下的文件做输出这样其实就是同域了。不过这种方法编程会很复杂，流程控制很麻烦。&lt;br/&gt;方法三，采用ASPX文件做桥的方式，比如说 你想在A上请求B域名上的文件b,则你可以通过在A上请求A上的文件a，a在服务器端请求B下的b，a文件相当于做了个中装，这样在有些网站上是不可取的，因为效率不高，相应很慢，还耗费服务器带宽等资源。&lt;br/&gt;方法四，采用FLASH做桥，这种情况只能用在你可以控制A域和B域的情况，因为你需要在B域的根目录上放置一个crossdomain.xml，否则flash不能进行跨域请求。as中是可以做HTTP的get和POST请求的，甚至可以实现socket连接（很多的在线TM和无刷聊天室都是借助FLASH来实现的），如果处理的好可以用他来代替AJAX不能处理跨域的问题&lt;br/&gt;方法五，如果你的域名是另外一个域名的子域名则可以通过设置document.domain来指定当前域名所属的域，这样两个域就互为信任，以前试验过有点不可靠，不建议怎么做。&lt;br/&gt;这几个方法是在实际项目过程总碰到的，，可能有不对的地方，大家不要拍我啊 。&amp;nbsp;	转载请注明来源：javascript跨域请求数据常见的几个变通的方法&lt;br/&gt;http://www.php1.cn/Content/javascript_KuaYuQingQiuShuJuChangJianDeJiGeBianTongDeFangFa.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464497022498221.jpg', 3, 1, 0, 1464497029, 1),
(16, '谈谈如何从零开始学习DIVCSS', '&lt;p&gt;摘要：CSS是样式,DIV是层.DIV+CSS是网站标准（web标准），通常为了说明与HTML网页设计语言中的表格（table）定位方式的区别.因为XHTML网站设计标准中，不再使用表格定位技术，而是采用DIV+CSS的方式实现各种定位。...&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;转载请注明来源：谈谈如何从零开始学习DIVCSS&lt;br/&gt;&lt;/p&gt;&lt;p&gt;CSS是样式,DIV是层.DIV+CSS是网站标准（web标准），通常为了说明与HTML网页设计语言中的表格（table）定位方式的区别.因为XHTML网站设计标准中，不再使用表格定位技术，而是采用DIV+CSS的方式实现各种定位。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/app/public/upload/images/20160529/1464497486606963.jpg&quot; title=&quot;1464497486606963.jpg&quot; alt=&quot;ccs7200b18226d91deb5de59ee90d4.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;1：学会HTML语言，再学习DIV+CSS时会得心应手。&lt;/p&gt;&lt;p&gt;看得懂HTML语法，那么世界上80%的网站都能被你看穿。HTML语言很好学，一定要熟记常用的一些代码，因为有了像dreamweaver这样的帮助生成html代码的工具,所以很多人都忽略了HTML的学习.学会了HTML互联网中最基本的语言之后，在学习DIV+CSS时，你会发现：原来DIV+CSS也就那样，小菜一碟。&lt;/p&gt;&lt;p&gt;推荐网站：HTML在线学习网站：http://www.w3school.com.cn/html/html_intro.asp&lt;/p&gt;&lt;p&gt;2.使用Dreamweaver的代码模式来编写DIV和CSS。&lt;/p&gt;&lt;p&gt;对于网页设计初学者来说，直接使用记事本、Notepad等工具来书写代码很困难。因为Dreamweaver的代码模式有提示功能，可以在保证语法编写的正确性。并且对不熟悉的语法可以一次性书写正确。&lt;/p&gt;&lt;p&gt;如图所示：书写div，html时DW的提供功能。&lt;/p&gt;&lt;p&gt;&amp;lt;img src=&amp;quot;http://www.php1.cn/imgupload/201509/0905010123abdf2a39_41_0.jpg&amp;quot; alt=&amp;quot;卢松松:DIV+CSS，网页制作教程，网站设计，网页设计教程&amp;quot; style=&amp;quot;width:auto;height:auto;&amp;quot; /&amp;gt;&lt;/p&gt;&lt;p&gt;书写CSS时DW工具栏右侧的CSS可视化编辑功能.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&amp;lt;img src=&amp;quot;http://www.php1.cn/imgupload/201509/0905010123abdf2a39_41_1.jpg&amp;quot; alt=&amp;quot;卢松松:DIV+CSS，网页制作教程，网站设计，网页设计教程&amp;quot; style=&amp;quot;width:auto;height:auto;&amp;quot; /&amp;gt;&lt;/p&gt;&lt;p&gt;我学习DIV+CSS时就是从Dreamweaver的代码模式学起的，也许不是最好，但很实用。&lt;/p&gt;&lt;p&gt;推荐网站：CSS在线学习网站：http://www.w3school.com.cn/css/&lt;/p&gt;&lt;p&gt;3：养成良好的书写习惯.&lt;/p&gt;&lt;p&gt;有良好的生活习惯，说明这人会过日子，有良好的CSS书写习惯，说明这人做事严谨。写css的时候网上有很多推荐的规范，比如菜单类用menu，版权用copyright（CoryRight），底部用footer等等，在书写顺序上一般是：显示属性-自身属性-文本属性。当然这些都没有硬性的规定，但是遵循一些不成文的规定不是坏事，这样让自己写的代码，容易让别人读懂，搜索引擎也更加喜欢。&lt;/p&gt;&lt;p&gt;4：只有目的明确，结果清晰，过程才最高效，才不会轻易被干扰，被改变方向。&lt;/p&gt;&lt;p&gt;CSS+DIV网页样式与布局精通视频教程：http://pcedu.pconline.com.cn/videoedu/ztsp/0904/1618470.html&lt;/p&gt;&lt;p&gt;转载请注明来源：谈谈如何从零开始学习DIVCSS&lt;br/&gt;http://www.php1.cn/Content/TanTanRuHeCongLingKaiShiXueXi_DIVCSS.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464497486606963.jpg', 5, 1, 0, 1464497492, 2),
(17, 'HTML5安全攻防详析之完结篇：HTML5对安全的改进', '&lt;p&gt;摘要：HTML5对旧有的安全策略进行了非常多的补充。HTML5为iframe元素增加了sandbox属性防止不信任的Web页面执行某些操作，例如访问父页面的DOM、执行脚本、访问本地存储或者本地数据库等等。...&lt;/p&gt;&lt;p&gt;转载请注明来源：HTML5安全攻防详析之完结篇：HTML5对安全的改进&lt;br/&gt;&lt;/p&gt;&lt;p&gt;HTML5对旧有的安全策略进行了非常多的补充。&lt;/p&gt;&lt;p&gt;一、iframe沙箱&lt;/p&gt;&lt;p&gt;HTML5为iframe元素增加了sandbox属性防止不信任的Web页面执行某些操作，例如访问父页面的DOM、执行脚本、访问本地存储或者本地数据库等等。但是这个安全策略又会带来另外的风险，这很有趣，例如ClickJacking攻击里阻止JavaScript脚本的运行来绕过JavaScript的防御方式。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464497666636138.jpg&quot; title=&quot;1464497666636138.jpg&quot; alt=&quot;aaaaa8568c76454aab2489e0d56e.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;二、CSP内容安全策略&lt;/p&gt;&lt;p&gt;XSS通过虚假内容和诱骗点击来绕过同源策略。 XSS攻击的核心是利用了浏览器无法区分脚本是被第三方注入的，还是真的是你应用程序的一部分。CSP定义了Content-Security-Policy HTTP头来允许你创建一个可信来源的白名单，使得浏览器只执行和渲染来自这些来源的资源，而不是盲目信任服务器提供的所有内容。即使攻击者可以找到漏洞来注入脚本，但是因为来源不包含在白名单里，因此将不会被执行。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;XSS攻击的原理&lt;/p&gt;&lt;p&gt;三、XSS过滤器&lt;/p&gt;&lt;p&gt;Chrome、Safari这样的现代浏览器也构建了安全防御措施，在前端提供了XSS过滤器。例如http://test.jiangyujie.com/?text=&amp;lt;/div&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;在Chrome中将无法得到执行，如下图所示。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;四、其他&lt;/p&gt;&lt;p&gt;另外HTML5的应用程序访问系统资源比Flash更受限制。&lt;/p&gt;&lt;p&gt;最后，关于HTML5专门的安全规范目前还在讨论中，有的人希望分散到HTML5规范的各个章节，有的人希望单独列出，目前没有单独的内容，因为不仅要考虑Web App开发者的安全，还要考虑实现HTML5支持的厂商，对它们进行规范和指导。&lt;/p&gt;&lt;p&gt;我个人认为HTML5的安全规范将会有一个统一的章节来进行阐述，并在各个功能模块相应的提及。&lt;/p&gt;&lt;p&gt;转载请注明来源：HTML5安全攻防详析之完结篇：HTML5对安全的改进&lt;br/&gt;http://www.php1.cn/Content/HTML5_AnQuanGongFangXiangXiZhiWanJiePian_-HTML5_DuiAnQuanDeGaiJin.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464497666636138.jpg', 4, 1, 0, 1464497671, 3),
(18, '【JavaScript】分秒倒计时器', '&lt;p&gt;摘要：一、基本目标在JavaScript设计一个分秒倒计时器，一旦时间完成使按钮变成不可点击状态具体效果如下图，为了说明问题，调成每50毫秒也就是每0.05跳一次表，真正使用的时候，把window.onload=function(){...}中的setInterval(clock.move(),50);从50调成1000即可...&lt;/p&gt;&lt;p&gt;转载请注明来源：【JavaScript】分秒倒计时器&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一、基本目标&lt;/p&gt;&lt;p&gt;在JavaScript设计一个分秒倒计时器，一旦时间完成使按钮变成不可点击状态&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160823/1471914286686830.jpg&quot; title=&quot;1471914286686830.jpg&quot; alt=&quot;01010101.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;具体效果如下图，为了说明问题，调成每50毫秒也就是每0.05跳一次表，&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20141119094527609&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;真正使用的时候，把window.onload=function(){...}中的setInterval(&amp;quot;clock.move()&amp;quot;,50);从50调成1000即可。&lt;/p&gt;&lt;p&gt;在时间用完之前，按钮还是可以点击的。&lt;/p&gt;&lt;p&gt;时间用完之后，按钮就不能点击了。&lt;/p&gt;&lt;p&gt;二、制作过程&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&lt;br/&gt;&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;gt;&lt;br/&gt;&amp;lt;head&amp;gt;&lt;br/&gt;&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt;&lt;br/&gt;&amp;lt;title&amp;gt;time remaining&amp;lt;/title&amp;gt;&lt;br/&gt;&amp;lt;/head&amp;gt;&lt;br/&gt;&amp;lt;!--html部分很简单，需要被javascript控制的行内文本与提交按钮都被编上ID--&amp;gt;&lt;br/&gt;&amp;lt;body&amp;gt;&lt;br/&gt;剩余时间：&amp;lt;span id=&amp;quot;timer&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;br/&gt;&amp;lt;input id=&amp;quot;go&amp;quot; type=&amp;quot;submit&amp;quot; value=&amp;quot;go&amp;quot; /&amp;gt;&lt;br/&gt;&amp;lt;/body&amp;gt;&lt;br/&gt;&amp;lt;/html&amp;gt;&lt;br/&gt;&amp;lt;script&amp;gt;&lt;br/&gt;/*主函数要使用的函数，进行声明*/&lt;br/&gt;var clock=new clock();&lt;br/&gt;/*指向计时器的指针*/&lt;br/&gt;var timer;&lt;br/&gt;window.onload=function(){&lt;br/&gt;	/*主函数就在每50秒调用1次clock函数中的move方法即可*/&lt;br/&gt;	timer=setInterval(&amp;quot;clock.move()&amp;quot;,50);&lt;br/&gt;	}&lt;br/&gt;function clock(){&lt;br/&gt;	/*s是clock()中的变量，非var那种全局变量，代表剩余秒数*/&lt;br/&gt;	this.s=140;&lt;br/&gt;	this.move=function(){&lt;br/&gt;		/*输出前先调用exchange函数进行秒到分秒的转换，因为exchange并非在主函数window.onload使用，因此不需要进行声明*/&lt;br/&gt;		document.getElementById(&amp;quot;timer&amp;quot;).innerHTML=exchange(this.s);&lt;br/&gt;		/*每被调用一次，剩余秒数就自减*/&lt;br/&gt;		this.s=this.s-1;&lt;br/&gt;		/*如果时间耗尽，那么，弹窗，使按钮不可用，停止不停调用clock函数中的move()*/&lt;br/&gt;		if(this.s&amp;lt;0){&lt;br/&gt;			alert(&amp;quot;时间到&amp;quot;);&lt;br/&gt;			document.getElementById(&amp;quot;go&amp;quot;).disabled=true;&lt;br/&gt;			clearTimeout(timer);&lt;br/&gt;			}&lt;br/&gt;		}&lt;br/&gt;	}&lt;br/&gt;function exchange(time){&lt;br/&gt;	/*javascript的除法是浮点除法，必须使用Math.floor取其整数部分*/&lt;br/&gt;		this.m=Math.floor(time/60);&lt;br/&gt;		/*存在取余运算*/&lt;br/&gt;		this.s=(time%60);&lt;br/&gt;		this.text=this.m+&amp;quot;分&amp;quot;+this.s+&amp;quot;秒&amp;quot;;&lt;br/&gt;		/*传过来的形式参数time不要使用this，而其余在本函数使用的变量则必须使用this*/&lt;br/&gt;		return this.text;&lt;br/&gt;}&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;转载请注明来源：【JavaScript】分秒倒计时器&lt;br/&gt;http://www.php1.cn/Content/JavaScript_FenMiaoDaoJiShiQi.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160823/1471914286686830.jpg', 3, 1, 0, 1464498001, 4),
(19, '我们需要了解的是php中的有关错误的配置有哪些？PHP的错误机制总结', '&lt;p&gt;摘要：php中有很多配置和参数是可以控制错误，以及错误的日志显示的。第一步，我们需要了解的是php中的有关错误的配置有哪些？...&lt;/p&gt;&lt;p&gt;转载请注明来源：我们需要了解的是php中的有关错误的配置有哪些？PHP的错误机制总结(转载)&lt;br/&gt;// Strict Standards: Only variables should be passed by reference in /tmp/php/index.php on line 17function change (&amp;amp;$var) {&lt;br/&gt;&amp;nbsp; $var += 10;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;$var = 1;&lt;br/&gt;change(++$var);// E_STRICT&lt;br/&gt;E_RECOVERABLE_ERROR&lt;br/&gt;这个级别其实是ERROR级别的，但是它是期望被捕获的，如果没有被错误处理捕获，表现和E_ERROR是一样的。&lt;br/&gt;经常出现在形参定义了类型，但调用的时候传入了错误类型。它的错误提醒也比E_ERROR的fatal error前面多了一个Catachable的字样。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464498283975530.jpg&quot; title=&quot;1464498283975530.jpg&quot; alt=&quot;phphpphpc.jpg&quot;/&gt;//Catchable fatal error: Argument 1 passed to testCall() must be an instance of A, instance of B given, called in /tmp/php/index.php on line 37 and defined in /tmp/php/index.php on line 33class A {&lt;br/&gt;}class B {&lt;br/&gt;}function testCall(A $a) {&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;$b = new B();&lt;br/&gt;testCall($b);&lt;br/&gt;E_DEPRECATED&lt;br/&gt;这个错误表示你用了一个旧版本的函数，而这个函数后期版本可能被禁用或者不维护了。&lt;br/&gt;比如curl的CURLOPT_POSTFIELDS使用\\@FILENAME来上传文件的方法&lt;br/&gt;// Deprecated: curl_setopt(): The usage of the @filename API for file uploading is deprecated. Please use the CURLFile class instead in /tmp/php/index.php on line 42$ch = curl_init(&amp;quot;http://www.remotesite.com/upload.php&amp;quot;);&lt;br/&gt;curl_setopt($ch, CURLOPT_POSTFIELDS, array(&amp;#39;fileupload&amp;#39; =&amp;gt; &amp;#39;@&amp;#39;. &amp;quot;test&amp;quot;));&lt;br/&gt;E_CORE_ERROR, E_CORE_WARNING&lt;br/&gt;这两个错误是由PHP的引擎产生的，在PHP初始化过程中发生。&lt;br/&gt;E_COMPILE_ERROR, E_COMPILE_WARNING&lt;br/&gt;这两个错误是由PHP引擎产生的，在编译过程中发生。&lt;br/&gt;E_USER_ERROR, E_USER_WARNING, E_USER_NOTICE, E_USER_DEPRECATED,&lt;br/&gt;这些错误都是用户制造的，使用trigger_error，这里就相当于一个口子给用户触发出各种错误类型。这个是一个很好逃避try catch异常的方式。&lt;br/&gt;trigger_error(&amp;quot;Cannot divide by zero&amp;quot;, E_USER_ERROR);// E_USER_ERROR// E_USER_WARING// E_USER_NOTICE// E_USER_DEPRECATED&lt;br/&gt;E_ALL&lt;br/&gt;E_STRICT出外的所有错误和警告信息。&lt;br/&gt;错误控制&lt;br/&gt;php中有很多配置和参数是可以控制错误，以及错误的日志显示的。第一步，我们需要了解的是php中的有关错误的配置有哪些？&lt;br/&gt;我们按照php+php-fpm的模型来说，会影响php错误显示的其实是有两个配置文件，一个是php本身的配置文件php.ini，另外一个是php-fpm的配置文件，php-fpm.conf。&lt;br/&gt;php.ini中的配置&lt;br/&gt;error_reporting = E_ALL &amp;nbsp;// 报告错误级别，什么级别的error_log = /tmp/php_errors.log // php中的错误显示的日志位置display_errors = On // 是否把错误展示在输出上，这个输出可能是页面，也可能是stdoutdisplay_startup_errors = On // 是否把启动过程的错误信息显示在页面上，记得上面说的有几个Core类型的错误是启动时候发生的，这个就是控制这些错误是否显示页面的。log_errors = On // 是否要记录错误日志log_errors_max_len = 1024 // 错误日志的最大长度ignore_repeated_errors = Off // 是否忽略重复的错误track_errors = Off // 是否使用全局变量$php_errormsg来记录最后一个错误xmlrpc_errors = 0 //是否使用XML-RPC的错误信息格式记录错误xmlrpc_error_number = 0 // 用作 XML-RPC faultCode 元素的值。html_errors = On &amp;nbsp;// 是否把输出中的函数等信息变为HTML链接docref_root = http://manual/en/ // 如果html_errors开启了，这个链接的根路径是什么fastcgi.logging = 0 // 是否把php错误抛出到fastcgi中&lt;br/&gt;我们经常会被问到，error_reporting和display_errors有什么区别呢？这两个函数是完全不一样的。&lt;br/&gt;PHP默认是会在日志和标准输出（如果是fpm模式标准输出就是页面）&lt;br/&gt;error_reporting的参数是错误级别。表示什么样子的级别才应该触发错误。如果我们告诉PHP，所有错误级别都不需要触发错误，那么，不管是日志，还是页面，都不会显示这个错误，就相当于什么都没有发生。&lt;br/&gt;display_errors是控制是否要在标准输出展示错误信息&lt;br/&gt;log_errors则是控制是否要在日志中记录错误信息。&lt;br/&gt;error_log是显示错误日志的位置，这个在php-fpm中往往会被重写，于是往往会发现的是cli和fpm的错误日志竟然不是在同一个文件中。&lt;br/&gt;ignore_repeated_errors这个标记控制的是如果有重复的日志，那么就只会记录一条，比如下面的程序：&lt;br/&gt;error_reporting(E_ALL);&lt;br/&gt;ini_set(&amp;#39;ignore_repeated_errors&amp;#39;, 1);&lt;br/&gt;ini_set(&amp;#39;ignore_repeated_source&amp;#39;, 1);$a = $c; $a = $c; //E_NOTICE&lt;br/&gt;//Notice: Undefined variable: c in /tmp/php/index.php on line 20&lt;br/&gt;本来会出现两次NOTICE的，但是现在，只会出现一次了...&lt;br/&gt;track_errors开启会把最后一个错误信息存储到变量里面去，这个可能在对记日志的时候会有一些用处吧。不过我觉得真是没啥用...&lt;br/&gt;html_errors 和 docref_root 两个是个挺有人性化的配置，配置了这两个参数以后，我们返回的错误信息中如果有一些在文档中有的信息，就会变成链接形式。&lt;br/&gt;error_reporting(E_ALL);ini_set(&amp;#39;html_errors&amp;#39;, 1);ini_set(&amp;#39;docref_root&amp;#39;, &amp;quot;https://secure.php.net/manual/zh/&amp;quot;);include(&amp;quot;a2.php&amp;quot;); //E_WARNING&lt;br/&gt;页面显示：&lt;br/&gt;能让你快速定位到我们出现错误的地方。是不是很人性～&lt;br/&gt;php-fpm中的配置&lt;br/&gt;error_log = /var/log/php-fpm/error.log // php-fpm自身的日志log_level = notice // php-fpm自身的日志记录级别php_flag[display_errors] = off // 覆盖php.ini中的某个配置变量，可被程序中的ini_set覆盖php_value[display_errors] = off // 同php_flagphp_admin_value[error_log] = /tmp/www-error.log // 覆盖php.ini中的某个配置变量，不可被程序中的ini_set覆盖php_admin_flag[log_errors] = on // 同php_admin_valuecatch_workers_output = yes // 是否抓取fpmworker的输出request_slowlog_timeout = 0 // 慢日志时长slowlog = /var/log/php-fpm/www-slow.log // 慢日志记录&lt;br/&gt;php-fpm的配置中也有一个error_log配置，这个很经常会和php.ini中的error_log配置弄混。但他们记录的东西是不一样的，php-fpm的error_log只记录php-fpm本身的日志，比如fpm启动，关闭。&lt;br/&gt;而php.ini中的error_log是记录php程序本身的错误日志。&lt;br/&gt;那么在php-fpm中要覆盖php.ini中的error_log配置，就需要使用到下面几个函数：&lt;br/&gt;php_flag&lt;br/&gt;php_value&lt;br/&gt;php_admin_flag&lt;br/&gt;php_admin_value&lt;br/&gt;这四个函数admin的两个函数说明这个变量设置完之后，不能在代码中使用ini_set把这个变量重新赋值了。而php_flag/value就仍然以php代码中的ini_set为准。&lt;br/&gt;slowlog是fpm记录的，可以使用request_slowlog_timeout设置判断慢日志的时长。&lt;br/&gt;总结&lt;br/&gt;我们经常弄混的就是日志问题，以及某些级别的日志为何没有记录到日志中。最主要的是要看error_log，display_errors, log_errors这三个配置，只是在看配置的时候，我们还要注意区分php.ini里面的配置是什么，php-fpm.ini里面的配置是什么。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464498283975530.jpg', 1, 1, 0, 1464498307, 6),
(11, '移动端H5前端性能优化', '&lt;p&gt;技术上，HTML5大行其道：&lt;/p&gt;&lt;p&gt;1：有数据显示，截至2015，有80%的App全部或部分基于HTML5。&lt;/p&gt;&lt;p&gt;2：谷歌浏览器于9月1日起不在支持自动播放Flash。&lt;/p&gt;&lt;p&gt;3：亚马逊旗下网站（包括Amazon.com门户在内）的所有广告将不再使用flash。在可预见的未来，flash广告将被HTML5广告所取代。&lt;/p&gt;&lt;p&gt;移动端+HTML5，这个组合对前端工程师来说是个不小的挑战：如何让开发的页面能有更好的体验？这就是我们今天讨论的话题：移动端HTML5页面前端性能优化。&lt;/p&gt;&lt;p&gt;如何优化HTML5在移动设置上的性能表现，首先需要明确以下几个原则：&lt;/p&gt;&lt;p&gt;1、PC优化手段在Mobile端同样适用。&lt;/p&gt;&lt;p&gt;2、在Mobile侧我们提出三秒种渲染完成首屏指标。&lt;/p&gt;&lt;p&gt;3、基于第二点，首屏加载3秒完成或使用Loading。&lt;/p&gt;&lt;p&gt;4、基于联通3G网络平均338KB/s(2.71Mb/s)，所以首屏资源不应超过1014KB。&lt;/p&gt;&lt;p&gt;5、Mobile端因手机配置原因，除加载外渲染速度也是优化重点。&lt;/p&gt;&lt;p&gt;6、基于第五点，要合理处理代码减少渲染损耗。&lt;/p&gt;&lt;p&gt;7、基于第二、第五点，所有影响首屏加载和渲染的代码应在处理逻辑中后置。&lt;/p&gt;&lt;p&gt;8、加载完成后用户交互使用时也需注意性能.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464494920948635.jpg&quot; title=&quot;1464494920948635.jpg&quot; alt=&quot;2424.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;接下来先看一张小抄神图：&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;之所以说是神图，是因为它基本上涵盖了所有的优化方案！非常详尽！在这里，我们针对其中几个代表性方案进行探讨：&lt;/p&gt;&lt;p style=&quot;padding: 0px 0px 0px 30px; margin: 0px; font-size: 24px; position: relative; left: -20px; height: 40px; line-height: 1.8; white-space: normal; font-family: &amp;#39;lucida grande&amp;#39;, &amp;#39;lucida sans unicode&amp;#39;, lucida, helvetica, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;Microsoft YaHei&amp;#39;, &amp;#39;WenQuanYi Micro Hei&amp;#39;, sans-serif; color: rgb(47, 47, 47); text-rendering: optimizeLegibility; background: url(&amp;quot;../../../../images/php100/green_ico.png&amp;quot;) no-repeat rgb(255, 255, 255);&quot;&gt;加载优化&lt;/p&gt;&lt;p&gt;对于移动端的网页来说，加载过程是最为耗时的过程，可能会占到总耗时的80%时间，因此是优化的重点，当然，手机站的其他前端要素优化也是不能忽略的。&lt;/p&gt;&lt;p&gt;1、减少HTTP请求&lt;/p&gt;&lt;p&gt;因为手机浏览器同时响应请求为4个请求（Android支持4个，iOS 5后可支持6个），所以要尽量减少页面的请求数，首次加载同时请求数不能超过4个，建议优化要点为以下2点：&lt;/p&gt;&lt;p&gt;1、合并CSS、Java&lt;/p&gt;&lt;p&gt;2、合并小图片，使用雪碧图&lt;/p&gt;&lt;p&gt;2、缓存&lt;/p&gt;&lt;p&gt;使用缓存可以减少向服务器的请求数，节省加载时间，所以所有静态资源都要在服务器端设置缓存，并且尽量使用长Cache（长Cache资源的更新可使用时间戳）。&lt;/p&gt;&lt;p&gt;1、缓存一切可缓存的资源&lt;/p&gt;&lt;p&gt;2、使用长Cache（使用时间戳更新Cache）&lt;/p&gt;&lt;p&gt;3、使用外联式引用CSS、Java&lt;/p&gt;&lt;p&gt;3、压缩HTML、CSS、Java&lt;/p&gt;&lt;p&gt;减少资源大小可以加快网页显示速度，所以要对HTML、CSS、Java等进行代码压缩，并在服务器端设置GZip。&lt;/p&gt;&lt;p&gt;1、压缩（例如，多余的空格、换行符和缩进）&lt;/p&gt;&lt;p&gt;2、启用GZip&lt;/p&gt;&lt;p&gt;4、无阻塞&lt;/p&gt;&lt;p&gt;写在HTML头部的Java（无异步），和写在HTML标签中的Style会阻塞页面的渲染，因此CSS放在页面头部并使用Link方式引入，避免在HTML标签中写Style，Java放在页面尾部或使用异步方式加载&lt;/p&gt;&lt;p&gt;5、使用首屏加载&lt;/p&gt;&lt;p&gt;首屏的快速显示，可以大大提升用户对页面速度的感知，因此应尽量针对首屏的快速显示做优化。&lt;/p&gt;&lt;p&gt;6、按需加载&lt;/p&gt;&lt;p&gt;将不影响首屏的资源和当前屏幕资源不用的资源放到用户需要时才加载，可以大大提升重要资源的显示速度和降低总体流量。&lt;/p&gt;&lt;p&gt;1、LazyLoad&lt;/p&gt;&lt;p&gt;2、滚屏加载&lt;/p&gt;&lt;p&gt;3、通过Media Query加载&lt;/p&gt;&lt;p&gt;另外，提醒大家一点：按需加载会导致大量重绘，影响渲染性能。&lt;/p&gt;&lt;p&gt;7、预加载&lt;/p&gt;&lt;p&gt;大型重资源页面（如游戏）可使用增加Loading的方法，资源加载完成后再显示页面，但Loading时间过长，会造成用户流失。&lt;/p&gt;&lt;p&gt;1、可感知Loading(如进入空间游戏的Loading)&lt;/p&gt;&lt;p&gt;2、不可感知的Loading（如提前加载下一页）&lt;/p&gt;&lt;p&gt;3、对用户行为分析，可以在当前页加载下一页资源，提升速度。&lt;/p&gt;&lt;p&gt;8、压缩图片&lt;/p&gt;&lt;p&gt;图片是最占流量的资源，因此尽量避免使用他，使用时选择最合适的格式（实现需求的前提下，以大小判断），合适的大小，然后使用智图压缩，同时在代码中用Srcset来按需显示。&lt;/p&gt;&lt;p&gt;1、使用智图&lt;/p&gt;&lt;p&gt;2、使用其它方式代替图片（使用CSS3；使用SVG；使用IconFont）&lt;/p&gt;&lt;p&gt;3、使用Srcset&lt;/p&gt;&lt;p&gt;4、选择合适的图片（webP优于JPG；PNG8优于GIF）&lt;/p&gt;&lt;p&gt;5、选择合适的大小（首次加载不大于1014KB；基于手机屏幕一般宽度不宽于640）&lt;/p&gt;&lt;p&gt;提醒大家一点：过度压缩图片大小影响图片显示效果。&lt;/p&gt;&lt;p&gt;9、减少Cookie，避免重定向以及异步加载第三方资源&lt;/p&gt;&lt;p&gt;Cookie会影响加载速度，所以静态资源域名不使用Cookie。另外，重定向会影响加载速度，所以在服务器正确设置避免重定向。还有，第三方资源不可控会影响页面的加载和显示，因此要异步加载第三方资源。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;img src=&quot;/boke/app/public/upload/images/20160529/1464495063882753.png&quot; title=&quot;1464495063882753.png&quot; alt=&quot;7777.png&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;padding: 0px; margin: 0px; font-size: 26px; color: rgb(47, 47, 47); letter-spacing: 1px; white-space: normal; font-family: &amp;#39;lucida grande&amp;#39;, &amp;#39;lucida sans unicode&amp;#39;, lucida, helvetica, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;Microsoft YaHei&amp;#39;, &amp;#39;WenQuanYi Micro Hei&amp;#39;, sans-serif; line-height: 1.8; text-rendering: optimizeLegibility; background-color: rgb(255, 255, 255);&quot;&gt;脚本执行优化&lt;/p&gt;&lt;p&gt;脚本处理不当会阻塞页面加载、渲染，因此在使用时需要注意以下几点：&lt;/p&gt;&lt;p&gt;1、CSS写在头部，Java写在尾部或异步。&lt;/p&gt;&lt;p&gt;2、避免图片和iFrame等的空Src，空Src会重新加载当前页面，影响速度和效率。&lt;/p&gt;&lt;p&gt;3、尽量避免重设图片大小，重设图片大小是指在页面、CSS、Java等中多次重置图片大小，多次重设图片大小会引发图片的多次重绘，影响性能。&lt;/p&gt;&lt;p&gt;4、图片尽量避免使用DataURL，DataURL图片没有使用图片的压缩算法文件会变大，并且要解码后再渲染，加载慢耗时长。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;padding: 0px 0px 0px 30px; margin: 0px; font-size: 24px; position: relative; left: -20px; height: 40px; line-height: 1.8; white-space: normal; font-family: &amp;#39;lucida grande&amp;#39;, &amp;#39;lucida sans unicode&amp;#39;, lucida, helvetica, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;Microsoft YaHei&amp;#39;, &amp;#39;WenQuanYi Micro Hei&amp;#39;, sans-serif; color: rgb(47, 47, 47); text-rendering: optimizeLegibility; background: url(&amp;quot;../../../../images/php100/green_ico.png&amp;quot;) no-repeat rgb(255, 255, 255);&quot;&gt;CSS优化&lt;/p&gt;&lt;p&gt;1、尽量避免写在HTML标签中写Style属性。&lt;/p&gt;&lt;p&gt;2、避免CSS表达式，CSS表达式的执行需跳出CSS树的渲染，因此请避免CSS表达式。&lt;/p&gt;&lt;p&gt;3、移除空的CSS规则，空的CSS规则增加了CSS文件的大小，且影响CSS树的执行，所以需移除空的CSS规则。&lt;/p&gt;&lt;p&gt;4、正确使用Display的属性，Display属性会影响页面的渲染，建议各位站长要合理使用。&lt;/p&gt;&lt;p&gt;（1）、display:inline后不应该再使用width、height、margin、padding以及float&lt;/p&gt;&lt;p&gt;（2）、display:inline-block后不应该再使用float&lt;/p&gt;&lt;p&gt;（3）、display:block后不应该再使用vertical-align&lt;/p&gt;&lt;p&gt;（4）、display:table-*后不应该再使用margin或者float&lt;/p&gt;&lt;p&gt;5、不滥用Float，Float在渲染时计算量比较大，尽量减少使用。&lt;/p&gt;&lt;p&gt;6、不滥用Web字体，Web字体需要下载，解析，重绘当前页面，尽量减少使用。&lt;/p&gt;&lt;p&gt;7、不声明过多的Font-size，过多的Font-size引发CSS树的效率。&lt;/p&gt;&lt;p&gt;8、值为0时不需要任何单位，为了浏览器的兼容性和性能，值为0时不要带单位。&lt;/p&gt;&lt;p&gt;9、标准化各种浏览器前缀&lt;/p&gt;&lt;p&gt;（1）、无前缀应放在最后。&lt;/p&gt;&lt;p&gt;（2）、CSS动画只用（-webkit- 无前缀）两种即可。&lt;/p&gt;&lt;p&gt;（3）、其它前缀为“-webkit- -moz- -ms-无前缀”四种（-o-Opera浏览器改用blink内核，所以淘汰）。&lt;/p&gt;&lt;p&gt;10、避免让选择符看起来像正则表达式。&lt;/p&gt;&lt;p&gt;高级选择器执行耗时长且不易读懂，避免使用。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;padding: 0px 0px 0px 30px; margin: 0px; font-size: 24px; position: relative; left: -20px; height: 40px; line-height: 1.8; white-space: normal; font-family: &amp;#39;lucida grande&amp;#39;, &amp;#39;lucida sans unicode&amp;#39;, lucida, helvetica, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;Microsoft YaHei&amp;#39;, &amp;#39;WenQuanYi Micro Hei&amp;#39;, sans-serif; color: rgb(47, 47, 47); text-rendering: optimizeLegibility; background: url(&amp;quot;../../../../images/php100/green_ico.png&amp;quot;) no-repeat rgb(255, 255, 255);&quot;&gt;Java执行优化&lt;/p&gt;&lt;p&gt;1、减少重绘和回流&lt;/p&gt;&lt;p&gt;（1）、避免不必要的Dom操作&lt;/p&gt;&lt;p&gt;（2）、尽量改变Class而不是Style，使用classList代替className&lt;/p&gt;&lt;p&gt;（3）、避免使用document.write&lt;/p&gt;&lt;p&gt;（4）、减少drawImage&lt;/p&gt;&lt;p&gt;2、缓存Dom选择与计算，每次Dom选择都要计算，缓存他。&lt;/p&gt;&lt;p&gt;3、缓存列表.length，每次.length都要计算，用一个变量保存这个值。&lt;/p&gt;&lt;p&gt;4、尽量使用事件代理，避免批量绑定事件。&lt;/p&gt;&lt;p&gt;5、尽量使用ID选择器，ID选择器是最快的。&lt;/p&gt;&lt;p&gt;6、TOUCH事件优化，使用touchstart、touchend代替click，因快影响速度快，但应注意Touch响应过快，易引发误操作。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;padding: 0px 0px 0px 30px; margin: 0px; font-size: 24px; position: relative; left: -20px; height: 40px; line-height: 1.8; white-space: normal; font-family: &amp;#39;lucida grande&amp;#39;, &amp;#39;lucida sans unicode&amp;#39;, lucida, helvetica, &amp;#39;Hiragino Sans GB&amp;#39;, &amp;#39;Microsoft YaHei&amp;#39;, &amp;#39;WenQuanYi Micro Hei&amp;#39;, sans-serif; color: rgb(47, 47, 47); text-rendering: optimizeLegibility; background: url(&amp;quot;../../../../images/php100/green_ico.png&amp;quot;) no-repeat rgb(255, 255, 255);&quot;&gt;渲染优化&lt;/p&gt;&lt;p&gt;HTML文档是以包含文档编码信息的数据流方式在网络间传输，页面的编码信息一般会在HTTP响应的头部信息或在文档内的HTML标记中指明，客户端浏览器只有在确定了页面编码后才能正确的渲染页面，所以在绘制页面或执行任何的java代码前，大部分的浏览器（ie6、ie7、ie8除外）都 会缓冲一定字节的数据来从中查找编码信息，不同的浏览器当中预缓冲的字节数是不一样的。&lt;/p&gt;&lt;p&gt;1、HTML使用Viewport&lt;/p&gt;&lt;p&gt;Viewport可以加速页面的渲染，请使用以下代码：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2、减少Dom节点&lt;/p&gt;&lt;p&gt;Dom节点太多影响页面的渲染，应尽量减少Dom节点。&lt;/p&gt;&lt;p&gt;3、动画优化&lt;/p&gt;&lt;p&gt;（1）、尽量使用CSS3动画。&lt;/p&gt;&lt;p&gt;（2）、合理使用requestAnimationFrame动画代替setTimeout。&lt;/p&gt;&lt;p&gt;（3）、适当使用Canvas动画5个元素以内使用css动画，5个以上使用Canvas动画（iOS8可使用webGL）。&lt;/p&gt;&lt;p&gt;4、高频事件优化&lt;/p&gt;&lt;p&gt;Touchmove、Scroll事件可导致多次渲染。&lt;/p&gt;&lt;p&gt;（1）、使用requestAnimationFrame监听帧变化，使得在正确的时间进行渲染。&lt;/p&gt;&lt;p&gt;（2）、增加响应变化的时间间隔，减少重绘次数。&lt;/p&gt;&lt;p&gt;5、GPU加速&lt;/p&gt;&lt;p&gt;CSS中以下属性（CSS3 transitions、CSS3 3Dtransforms、Opacity、Canvas、WebGL、Video）来触发GPU渲染，请合理使用。（PS：过渡使用会引发手机过耗电增加。）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464494920948635.jpg', 4, 1, 0, 1464495076, 0),
(6, '关于mysql_real_escape_string（）的使用', '&lt;p&gt;我找到的一位大神的关于mysql_real_escape_string（）函数的认识，稍微做了一点改动，记下来和大家一起分享：&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mysql_real_escape_string（）函数作用：1、防止SQL Injection攻击，也就是你必须验证用户的输入2、操作数据的时候避免不必要的字符导致错误&lt;/p&gt;&lt;p&gt;例子：攻击的例子［1］&lt;/p&gt;&lt;p&gt;例子 1&lt;/p&gt;&lt;p&gt;?php&lt;/p&gt;&lt;p&gt;$con = mysql_connect(&amp;quot;localhost&amp;quot;, &amp;quot;hello&amp;quot;, &amp;quot;321&amp;quot;);&lt;/p&gt;&lt;p&gt;if (!$con){die(&amp;#39;Could not connect: &amp;#39; . mysql_error());}&lt;/p&gt;&lt;p&gt;// 获得用户名和密码的代码&lt;/p&gt;&lt;p&gt;// 转义用户名和密码，以便在 SQL 中使用&lt;/p&gt;&lt;p&gt;$user = mysql_real_escape_string($user);&lt;/p&gt;&lt;p&gt;$pwd = mysql_real_escape_string($pwd);&lt;/p&gt;&lt;p&gt;$sql = &amp;quot;SELECT * FROM users WHEREuser=&amp;#39;&amp;quot; . $user . &amp;quot;&amp;#39; AND password=&amp;#39;&amp;quot; . $pwd . &amp;quot;&amp;#39;&amp;quot;&lt;/p&gt;&lt;p&gt;// 更多代码&lt;/p&gt;&lt;p&gt;mysql_close($con);?&amp;gt;&lt;/p&gt;&lt;p&gt;例子 2&lt;/p&gt;&lt;p&gt;数据库攻击。本例演示如果我们不对用户名和密码应用 mysql_real_escape_string() 函数会发生什么：&lt;/p&gt;&lt;p&gt;?php&lt;/p&gt;&lt;p&gt;$con = mysql_connect(&amp;quot;localhost&amp;quot;, &amp;quot;hello&amp;quot;, &amp;quot;321&amp;quot;);&lt;/p&gt;&lt;p&gt;if (!$con){&lt;/p&gt;&lt;p&gt;die(&amp;#39;Could not connect: &amp;#39; . mysql_error());&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;$sql = &amp;quot;SELECT * FROM usersWHERE user=&amp;#39;{$_POST[&amp;#39;user&amp;#39;]}&amp;#39;AND password=&amp;#39;{$_POST[&amp;#39;pwd&amp;#39;]}&amp;#39;&amp;quot;;mysql_query&lt;/p&gt;&lt;p&gt;($sql);&lt;/p&gt;&lt;p&gt;// 不检查用户名和密码&lt;/p&gt;&lt;p&gt;// 可以是用户输入的任何内容，比如：&lt;/p&gt;&lt;p&gt;$_POST[&amp;#39;user&amp;#39;] = &amp;#39;john&amp;#39;;$_POST[&amp;#39;pwd&amp;#39;] = &amp;quot;&amp;#39; OR &amp;#39;&amp;#39;=&amp;#39;&amp;quot;;&lt;/p&gt;&lt;p&gt;// 一些代码...&lt;/p&gt;&lt;p&gt;mysql_close($con);&lt;/p&gt;&lt;p&gt;那么 SQL 查询会成为这样：&lt;/p&gt;&lt;p&gt;SELECT * FROM users WHERE user=&amp;#39;john&amp;#39; AND password=&amp;#39;&amp;#39; OR &amp;#39;&amp;#39;=&amp;#39;&lt;/p&gt;&lt;p&gt;&amp;#39;这意味着任何用户无需输入合法的密码即可登陆。&lt;/p&gt;&lt;p&gt;例子 3预防数据库攻击的正确做法：&lt;/p&gt;&lt;p&gt;?php&lt;/p&gt;&lt;p&gt;function check_input($value){&lt;/p&gt;&lt;p&gt;// 去除斜杠&lt;/p&gt;&lt;p&gt;if (get_magic_quotes_gpc()){&lt;/p&gt;&lt;p&gt;$value = stripslashes($value);&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;// 如果不是数字则加引号&lt;/p&gt;&lt;p&gt;if (!is_numeric($value)){&lt;/p&gt;&lt;p&gt;$value = &amp;quot;&amp;#39;&amp;quot; . mysql_real_escape_string($value) . &amp;quot;&amp;#39;&amp;quot;;&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;return $value;&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;$con = mysql_connect(&amp;quot;localhost&amp;quot;, &amp;quot;hello&amp;quot;, &amp;quot;321&amp;quot;);&lt;/p&gt;&lt;p&gt;if (!$con){&lt;/p&gt;&lt;p&gt;die(&amp;#39;Could not connect: &amp;#39; . mysql_error());&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;// 进行安全的 SQL&lt;/p&gt;&lt;p&gt;$user = check_input($_POST[&amp;#39;user&amp;#39;]);&lt;/p&gt;&lt;p&gt;$pwd = check_input($_POST[&amp;#39;pwd&amp;#39;]);&lt;/p&gt;&lt;p&gt;$sql = &amp;quot;SELECT * FROM users WHEREuser=$user AND password=$pwd&amp;quot;;&lt;/p&gt;&lt;p&gt;mysql_query($sql);&lt;/p&gt;&lt;p&gt;mysql_close($con);?&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/demo.jpg', 1, 1, 0, 1464458775, 1),
(7, '关于Thinkphp 框架模板中的&lt;if&gt;标签问题', '&lt;p&gt;这两天用ThinkPHP框架，边学习，边用它开发商城，由于学习的资料是用的Smarty模板引擎，而我选择用tp默认模板，遇到了几个比较容易出错的，总结一下。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160822/1471877952109627.jpeg&quot; title=&quot;1471877952109627.jpeg&quot; alt=&quot;2a595c93ae1e1c3490f3b61a906eed7e.jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;quot;&amp;quot;标签，&lt;/p&gt;&lt;p&gt;在模板中利用if标签进行判断时，要注意几点，&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;quot;&amp;quot;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面这个有两个地方错误：&lt;/p&gt;&lt;p&gt;1、在if标签之中不能直接使用‘=’，只能用eq &amp;nbsp;或则其他替代符替代运算符。&lt;/p&gt;&lt;p&gt;2、if判断 &amp;nbsp;&amp;#39;&amp;gt;&amp;#39;这个符号之前必须要留空格，否则不报错也不生效，&lt;/p&gt;&lt;p&gt;正确写法应该为:&amp;quot;&amp;nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;&lt;p&gt;3 、还多在if标签判断字符是否存在数组中进行判断时，&lt;/p&gt;&lt;p&gt;数组不能用$arr.name代替$arr[&amp;#39;name&amp;#39;],&lt;/p&gt;&lt;p&gt;例：错误！&amp;quot; &amp;nbsp; &amp;quot;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;正确：&amp;quot; &amp;nbsp; &amp;quot;&lt;/p&gt;&lt;p&gt;麻蛋！写的标签，新浪直接全部给我屏蔽了&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160822/1471877952109627.jpeg', 1, 1, 0, 1464461688, 0);
INSERT INTO `bk_blog` (`blog_id`, `blog_title`, `blog_content`, `blog_logo`, `blog_cid`, `blog_uid`, `blog_type`, `blog_time`, `blog_click`) VALUES
(8, '五一{PHP}学习记录', '&lt;p&gt;&amp;nbsp;五一了，公司放了八天假，室友都旅游得旅游，回家的回家。我却只有电脑为友，音乐为伴。一天到晚不停的敲击着键盘，看着那枯燥无味的教学视频。&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;由于放假的时间和自己计划有些不一样，我不得不该变计划，北京现在还是不要去了，没有作品，没有实力，去了也是白瞎。正好借五一这个长假，找到一个商城项目，开始疯狂起来。&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;白天由于周边其他因素干扰思想，我习惯下午6点多就睡了，到半夜一点起来，那时候，感觉自己就是整个世界，家里的所有都属于我一个人。一学就是一天，除了吃饭，几乎没有离开过。当然学习的效果还是有目共睹！最想吐槽的就是查找BUG，，我真想说脏话！算了，不废话，把这两天的小问题和自己的错误进行一个归纳！&lt;/p&gt;&lt;p&gt;1，tp框架自带分页功能太少了，用了下，真的不喜欢，就换了一个自定义的，不过我又想用tp的查询方法，所以改了改分页类里面的方法&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464461969540952.jpg&quot; title=&quot;1464461969540952.jpg&quot; alt=&quot;101N7ZF4Qf8.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;﻿ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;实例化自定义page类&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s2.sinaimg.cn/mw690/002vnVLFzy71pNpKvu181&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 原方法﻿&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s1.sinaimg.cn/mw690/002vnVLFzy71pNDW2di80&quot;/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ﻿更改后的pag类&lt;/p&gt;&lt;p&gt;&amp;nbsp;现在还有一个问题就是我后台商品列表展示中有一个可以选择品牌的显示，如果我分页到了第二页，或者第三页，假如在第三页上选择品牌查询，该商品显示时不跳转到首页，如果查询品牌商品不多，在第三页就没有数据显示。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s16.sinaimg.cn/mw690/002vnVLFzy71pOnnGAnaf&quot;/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;﻿默认查找所有商品，并根据添加时间进行排序&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s7.sinaimg.cn/mw690/002vnVLFzy71pOzYWfY96&quot;/&gt;&lt;/p&gt;&lt;p&gt;﻿ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;首页查询小米品牌商品列表&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s16.sinaimg.cn/mw690/002vnVLFzy71pOMVlqT8f&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;最后，我弄了很久，估计是少了点东西，我觉得加一个跳转或者加一个js都可以实现，不过现在不深究它了，过几天主线做完了在来优化。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2，&lt;/p&gt;&lt;p&gt;第二个问题是，tp框架里的文件上传，调用$this-&amp;gt;uploadOne()方法上传后，保存到配置的文件夹下，文件名系统编码了，&lt;/p&gt;&lt;p&gt;但是！！！！！但是！！！！调用框架方法去寻找文件，文件居然不存在！！！！同样的手法，同样的配方，还是你系统自己的方法，比如利用Image.class.php里面的open方法去打开文件，居然说没有这个文件，我现在也没搞懂，手册也看了，百度也问了，暂时美欧解决，只是先将upload类的配置 &amp;nbsp;saveName=&amp;gt;&amp;#39;&amp;#39;, 设置为空，不让它重命名！&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s2.sinaimg.cn/mw690/002vnVLFzy71pPPwBSV71&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4，&lt;/p&gt;&lt;p&gt;今天做权限控制，在将权限列表利用foreach标签在模板之中遍历时，没问题，可是在foreach里面再foreach，也无所谓，可是那个if标签我是真要吐槽一下，太繁琐，还没有原生的好用，&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;自己体会，可能这也是很多人不用tp模板而用smarty的原因吧！还有，tp模板标签里面不能用比较符，否则会报错，只能用 &amp;nbsp;eq &amp;nbsp;lt &amp;nbsp;glt &amp;nbsp; 。。。。。。&lt;/p&gt;&lt;p&gt;暂时就这几个吧，等商场开发好了，我还是做一个博客吧！现在感觉做个博客真的好简单！！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464461969540952.jpg', 8, 1, 0, 1464462244, 5),
(9, '关于ThinkPHP中添加数据的问题', '&lt;p&gt;今天遇到一个问题，在利用ThinkPHP框架add()函数利用表单_GET方法添加数据时，数据添加成功，但数据库只有ID增加，内容为空，通过了很多方法尝试，最后终于解决了。&lt;/p&gt;&lt;p&gt;做个记录，同时也给 大家看看，相信有很多初学者也会遇到这些问题。&lt;/p&gt;&lt;p&gt;如图：是我的代码&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464462691114042.jpg&quot; title=&quot;1464462691114042.jpg&quot; alt=&quot;001.jpg&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;﻿IndexAction.class.php代码&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s15.sinaimg.cn/mw690/002vnVLFzy6Z0BFlDXMde&quot;/&gt;&lt;/p&gt;&lt;p&gt;﻿ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; add.html提交表单代码&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s8.sinaimg.cn/mw690/002vnVLFzy6Z0CbcxqD07&quot;/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ﻿数据库只有ID增加，没有内容&lt;/p&gt;&lt;p&gt;问题在于以前数据库表缓存为清理，很多人按教程做，数据库表更改后未清理Runtiom下的data缓存，如图&lt;/p&gt;&lt;p&gt;﻿数据库表缓存目录&lt;/p&gt;&lt;p&gt;删除_fields下的数据库表缓存文件，重试！如图，问题解决了。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://s6.sinaimg.cn/mw690/002vnVLFzy6Z0Cx2HKla5&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464462691114042.jpg', 8, 1, 0, 1464462700, 1),
(10, 'PHP编程效率的20个要点', '&lt;p&gt;用单引号代替双引号来包含字符串，这样做会更快一些。因为PHP会在双引号包围的字符串中搜寻变量，单引号则 不会，注意：只有echo能这么做，它是一种可以把多个字符串当作参数的“函数”(译注：PHP手册中说echo是语言结构，不是真正的函数，故把函数加 上了双引号)。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/APP/Public/upload/images/20160529/1464494475133049.png&quot; title=&quot;1464494475133049.png&quot; alt=&quot;hk.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;　 &amp;nbsp;1、如果能将类的方法定义成static，就尽量定义成static，它的速度会提升将近4倍。&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;2、$row[’id’] 的速度是$row[id]的7倍。&lt;/p&gt;&lt;p&gt;　　3、echo 比 print 快，并且使用echo的多重参数(译注：指用逗号而不是句点)代替字符串连接，比如echo $str1,$str2。&lt;/p&gt;&lt;p&gt;　　4、在执行for循环之前确定最大循环数，不要每循环一次都计算最大值，最好运用foreach代替。&lt;/p&gt;&lt;p&gt;　　5、注销那些不用的变量尤其是大数组，以便释放内存。&lt;/p&gt;&lt;p&gt;　　6、尽量避免使用__get，__set，__autoload。&lt;/p&gt;&lt;p&gt;　　7、require_once()代价昂贵。&lt;/p&gt;&lt;p&gt;　　8、include文件时尽量使用绝对路径，因为它避免了PHP去include_path里查找文件的速度，解析操作系统路径所需的时间会更少。&lt;/p&gt;&lt;p&gt;　　9、如果你想知道脚本开始执行(译注：即服务器端收到客户端请求)的时刻，使用$_SERVER[‘REQUEST_TIME’]要好于time()。&lt;/p&gt;&lt;p&gt;　　10、函数代替正则表达式完成相同功能。&lt;/p&gt;&lt;p&gt;　　11、str_replace函数比preg_replace函数快，但strtr函数的效率是str_replace函数的四倍。&lt;/p&gt;&lt;p&gt;　　12、如果一个字符串替换函数，可接受数组或字符作为参数，并且参数长度不太长，那么可以考虑额外写一段替换代码，使得每次传递参数是一个字符，而不是只写一行代码接受数组作为查询和替换的参数。&lt;/p&gt;&lt;p&gt;　　13、使用选择分支语句(译注：即switch case)好于使用多个if，else if语句。&lt;/p&gt;&lt;p&gt;　　14、用@屏蔽错误消息的做法非常低效，极其低效。&lt;/p&gt;&lt;p&gt;　　15、打开apache的mod_deflate模块，可以提高网页的浏览速度。&lt;/p&gt;&lt;p&gt;　　16、数据库连接当使用完毕时应关掉，不要用长连接。&lt;/p&gt;&lt;p&gt;　　17、错误消息代价昂贵。&lt;/p&gt;&lt;p&gt;　　18、在方法中递增局部变量，速度是最快的。几乎与在函数中调用局部变量的速度相当。&lt;/p&gt;&lt;p&gt;　　19、递增一个全局变量要比递增一个局部变量慢2倍。&lt;/p&gt;&lt;p&gt;　　20、递增一个对象属性(如：$this-&amp;gt;prop++)要比递增一个局部变量慢3倍。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160529/1464494475133049.png', 1, 1, 0, 1464494479, 0),
(52, '', '&lt;p&gt;人总要努力，才能活成自己喜欢的样子。&lt;img src=&quot;/APP/Public/upload/images/20160823/1471933954722202.png&quot; title=&quot;1471933954722202.png&quot; alt=&quot;1f8aea2172f6eb987c3de3f7ba474eb1.png&quot;/&gt;&lt;/p&gt;', '/APP/Public/upload/images/20160823/1471933954722202.png', 12, 1, 0, 1471934517, 0);

-- --------------------------------------------------------

--
-- 表的结构 `bk_class`
--

CREATE TABLE IF NOT EXISTS `bk_class` (
  `class_id` tinyint(2) unsigned NOT NULL,
  `class_name` varchar(50) CHARACTER SET utf8 NOT NULL,
  `class_lid` smallint(2) unsigned NOT NULL,
  `class_type` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '子类属性：0：公开，1：隐藏',
  `class_ord` tinyint(2) unsigned NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COLLATE=utf8_croatian_ci;

--
-- 转存表中的数据 `bk_class`
--

INSERT INTO `bk_class` (`class_id`, `class_name`, `class_lid`, `class_type`, `class_ord`) VALUES
(1, 'PHP', 3, 0, 1),
(2, 'JAVA', 3, 0, 2),
(3, 'JavaScript', 2, 0, 1),
(4, 'HTML5', 2, 0, 2),
(5, 'CSS3/DIV', 2, 0, 3),
(6, 'SEO', 2, 0, 4),
(7, '个人日记', 4, 0, 10),
(8, '学习笔记', 4, 0, 3),
(9, '临时感悟', 4, 0, 4),
(12, '心情说说', 8, 0, 10),
(11, 'SQL', 3, 0, 4);

-- --------------------------------------------------------

--
-- 表的结构 `bk_comments`
--

CREATE TABLE IF NOT EXISTS `bk_comments` (
  `comments_id` int(10) unsigned NOT NULL,
  `comments_content` text CHARACTER SET utf8 NOT NULL,
  `comments_uid` int(10) unsigned NOT NULL COMMENT '用户id',
  `comments_bid` int(10) unsigned NOT NULL COMMENT '文章id',
  `comments_time` int(10) unsigned NOT NULL DEFAULT '0'
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_croatian_ci;

-- --------------------------------------------------------

--
-- 表的结构 `bk_lanmu`
--

CREATE TABLE IF NOT EXISTS `bk_lanmu` (
  `lanmu_id` tinyint(2) unsigned NOT NULL,
  `lanmu_name` varchar(50) CHARACTER SET utf8 NOT NULL,
  `lanmu_ename` varchar(30) CHARACTER SET utf8 NOT NULL,
  `lanmu_link` varchar(40) CHARACTER SET utf8 NOT NULL COMMENT '控制器/方法',
  `lanmu_type` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '栏目属性：0：公开，1：隐藏',
  `lanmu_ord` tinyint(2) unsigned NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COLLATE=utf8_croatian_ci COMMENT='栏目表';

--
-- 转存表中的数据 `bk_lanmu`
--

INSERT INTO `bk_lanmu` (`lanmu_id`, `lanmu_name`, `lanmu_ename`, `lanmu_link`, `lanmu_type`, `lanmu_ord`) VALUES
(1, '首页', 'Home', 'Index/index', 0, 0),
(2, 'Web前端', 'WebFront', 'Index/lists', 0, 2),
(3, '后端技术', 'Back', 'Index/lists', 0, 3),
(4, '游戏人间', 'Game', 'Index/game', 0, 4),
(5, '相册', 'Album', 'Index/photo', 1, 6),
(6, '关于我', 'MySelf', 'Index/myself', 0, 6),
(7, '留言板', 'Message', 'Index/message', 0, 7),
(8, '碎言碎语', 'Mood', 'Index/moodlist', 0, 5);

-- --------------------------------------------------------

--
-- 表的结构 `bk_link`
--

CREATE TABLE IF NOT EXISTS `bk_link` (
  `link_id` smallint(3) unsigned NOT NULL,
  `link_name` varchar(30) CHARACTER SET utf8 NOT NULL,
  `link_url` varchar(100) CHARACTER SET utf8 NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_croatian_ci;

-- --------------------------------------------------------

--
-- 表的结构 `bk_user`
--

CREATE TABLE IF NOT EXISTS `bk_user` (
  `user_id` int(10) unsigned NOT NULL,
  `user_name` varchar(30) CHARACTER SET utf8 NOT NULL,
  `user_ckame` varchar(25) CHARACTER SET utf8 NOT NULL COMMENT '昵称',
  `user_pwd` varchar(32) CHARACTER SET utf8 NOT NULL,
  `user_logo` varchar(100) CHARACTER SET utf8 NOT NULL COMMENT '头像',
  `user_link` varchar(100) CHARACTER SET utf8 NOT NULL COMMENT '主页',
  `user_email` varchar(60) CHARACTER SET utf8 NOT NULL,
  `user_qq` int(10) unsigned NOT NULL,
  `user_sex` varchar(10) CHARACTER SET utf8 NOT NULL DEFAULT '男',
  `user_qm` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '个性签名',
  `user_type` tinyint(2) unsigned NOT NULL DEFAULT '0' COMMENT '属性0：普通，1：管理员',
  `user_time` int(10) unsigned NOT NULL DEFAULT '0',
  `user_ip` varchar(15) COLLATE utf8_croatian_ci NOT NULL DEFAULT '0.0.0.0'
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COLLATE=utf8_croatian_ci COMMENT='用户表';

--
-- 转存表中的数据 `bk_user`
--

INSERT INTO `bk_user` (`user_id`, `user_name`, `user_ckame`, `user_pwd`, `user_logo`, `user_link`, `user_email`, `user_qq`, `user_sex`, `user_qm`, `user_type`, `user_time`, `user_ip`) VALUES
(1, 'admin', '小明', 'e10adc3949ba59abbe56e057f20f883e', '', '', '', 0, '男', '', 0, 1463804521, '127.0.0.1');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `bk_blog`
--
ALTER TABLE `bk_blog`
  ADD PRIMARY KEY (`blog_id`),
  ADD KEY `bolog_cid` (`blog_cid`),
  ADD KEY `blog_uid` (`blog_uid`);

--
-- Indexes for table `bk_class`
--
ALTER TABLE `bk_class`
  ADD PRIMARY KEY (`class_id`),
  ADD KEY `class_lid` (`class_lid`,`class_type`);

--
-- Indexes for table `bk_comments`
--
ALTER TABLE `bk_comments`
  ADD PRIMARY KEY (`comments_id`),
  ADD KEY `comments_uid` (`comments_uid`,`comments_bid`);

--
-- Indexes for table `bk_lanmu`
--
ALTER TABLE `bk_lanmu`
  ADD PRIMARY KEY (`lanmu_id`);

--
-- Indexes for table `bk_link`
--
ALTER TABLE `bk_link`
  ADD PRIMARY KEY (`link_id`);

--
-- Indexes for table `bk_user`
--
ALTER TABLE `bk_user`
  ADD PRIMARY KEY (`user_id`),
  ADD KEY `user_type` (`user_type`,`user_time`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `bk_blog`
--
ALTER TABLE `bk_blog`
  MODIFY `blog_id` int(10) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=54;
--
-- AUTO_INCREMENT for table `bk_class`
--
ALTER TABLE `bk_class`
  MODIFY `class_id` tinyint(2) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=13;
--
-- AUTO_INCREMENT for table `bk_comments`
--
ALTER TABLE `bk_comments`
  MODIFY `comments_id` int(10) unsigned NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `bk_lanmu`
--
ALTER TABLE `bk_lanmu`
  MODIFY `lanmu_id` tinyint(2) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=9;
--
-- AUTO_INCREMENT for table `bk_link`
--
ALTER TABLE `bk_link`
  MODIFY `link_id` smallint(3) unsigned NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `bk_user`
--
ALTER TABLE `bk_user`
  MODIFY `user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=2;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
